{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0c751030\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"frame\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"canvas\",\n  width: \"1024\",\n  height: \"683\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"download\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"a\", {\n    href: \"\",\n    download: \"\",\n    id: \"download_link\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.canDownload && _ctx.canDownload(...args))\n  }, \"ダウンロード\")])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEACEA,oBAEM,KAFN,EAEM;AAFDC,OAAK,EAAC;AAEL,CAFN,EAAkB,cAChBD,oBAAuD,QAAvD,EAAuD;AAA/CE,IAAE,EAAC,QAA4C;AAAnCC,OAAK,EAAC,MAA6B;AAAtBC,QAAM,EAAC;AAAe,CAAvD,CADgB,CAAlB;;AAAA;;;AAGKH,OAAK,EAAC;;;6DAHXI,YAGAL,oBAEM,KAFN,cAEM,CADJA,oBAAyE,GAAzE,EAAyE;AAAtEM,QAAI,EAAC,EAAiE;AAA9DC,YAAQ,EAAC,EAAqD;AAAlDL,MAAE,EAAC,eAA+C;AAA9BM,WAAK,yCAAEC,6CAAF;AAAyB,GAAzE,EAA+D,QAA/D,CACI,CAFN","names":["_createElementVNode","class","id","width","height","_hoisted_1","href","download","onClick","_ctx"],"sourceRoot":"","sources":["/Users/nao/Desktop/最終/zip/t-project/src/views/FrameView.vue"],"sourcesContent":["<template>\n  <div class=\"frame\">\n    <canvas id=\"canvas\" width=\"1024\" height=\"683\"></canvas>\n  </div>\n  <div class=\"download\">\n    <a href=\"\" download=\"\" id=\"download_link\" @click=\"canDownload\">ダウンロード</a>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted } from 'vue';\nimport { useStore } from 'vuex'\n\nexport default defineComponent({\n  setup() {\n    onMounted(() => {\n      const store = useStore();\n      const canvas = document.getElementById('canvas');\n      const ctx = canvas.getContext('2d');\n      //画像定義\n      const img = new Image();\n      img.src = '/img/sakura.jpeg';\n      \n      img.onload = function() {\n        //画像サイズ取得\n        const imgWidth = img.width;\n        const imgHeight = img.height;\n        //canvasサイズ取得\n        const canWidth = canvas.width;\n        //画像をcanvasサイズに合わせて描画するために縦横比を取得\n        const compression = canWidth / imgWidth;\n        const compHeight  = compression * imgHeight;\n        //画像描画\n        ctx.drawImage(img, 0, 0, canWidth, compHeight);\n        //文字設定\n        ctx.font = \"60px 'Kosugi Maru'\";\n        ctx.textAlign = \"left\";        // 左右中央\n        ctx.textBaseline = \"middle\";   // 上下中央\n        //文字描画\n        const nameData = (store.state.name != '') ? store.state.name + 'さん' : '';\n        const msgData = store.state.msg;\n        ctx.fillText(nameData, 50, 80, 500);\n        ctx.fillText(msgData, 50, 580, 500);\n      }\n    });\n    \n    //ダウンロードリンク押下時、ダウンロード処理\n    const canDownload = () => {\n      const dlLink = document.getElementById('download_link');\n      const canvas = document.getElementById('canvas');\n      dlLink.href = canvas.toDataURL();\n      dlLink.download = 'sakura.jpeg';\n    }   \n\n    return {\n      canDownload\n    }\n  },\n})\n</script>\n\n<style scoped>\n.frame {\n  width: 90%;\n  margin: 10vh auto 0;\n  position: relative;\n}\n.frame canvas {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}